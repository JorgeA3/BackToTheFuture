Command: ninja all
[1/9] Performing build step for 'bootloader'
[1/1] cd /project/build/bootloader/esp-idf/esptool_py && /opt/esp-idf-tools/python_env/idf5.5_py3.10_env/bin/python /opt/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /project/build/bootloader/bootloader.bin
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mi_proyecto_adc.c.obj
In file included from /project/main/mi_proyecto_adc.c:5:
/opt/esp-idf/components/driver/deprecated/driver/adc.h:19:2: warning: #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively" [-Wcpp]
   19 | #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively"
      |  ^~~~~~~
/project/main/mi_proyecto_adc.c: In function 'app_main':
/project/main/mi_proyecto_adc.c:27:5: warning: 'ADC_ATTEN_DB_11' is deprecated [-Wdeprecated-declarations]
   27 |     adc1_config_channel_atten(ADC1_CHANNEL_4, ADC_ATTEN_DB_11); // GPIO32
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /opt/esp-idf/components/driver/deprecated/driver/adc_types_legacy.h:8,
                 from /opt/esp-idf/components/driver/deprecated/driver/adc.h:15:
/opt/esp-idf/components/hal/include/hal/adc_types.h:51:5: note: declared here
   51 |     ADC_ATTEN_DB_11 __attribute__((deprecated)) = ADC_ATTEN_DB_12,  ///<This is deprecated, it behaves the same as `ADC_ATTEN_DB_12`
      |     ^~~~~~~~~~~~~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating esp-idf/esp_system/ld/sections.ld
[5/7] Linking CXX executable mi_proyecto_adc.elf
[6/7] Generating binary image from built executable
esptool.py v4.10.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /project/build/mi_proyecto_adc.bin
[7/7] cd /project/build/esp-idf/esptool_py && /opt/esp-idf-tools/python_env/idf5.5_py3.10_env/bin/python /opt/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /project/build/partition_table/partition-table.bin /project/build/mi_proyecto_adc.bin
mi_proyecto_adc.bin binary size 0x31c80 bytes. Smallest app partition is 0x100000 bytes. 0xce380 bytes (81%) free.
